*This repo is on building, use it at your own risk.*

* An Expected Emacs Setup for MacOS
- Default with shortcuts and features that you already learned.
- Has an expected vim emulator via [[https://github.com/emacs-evil/evil][evil-mode]].
- Provides tools like [[https://orgmode.org/][org-mode]] and [[https://magit.vc/][magit]].
- Highly customizable.
- It's just an Text Editor, not an IDE(I use [[https://www.jetbrains.com/idea/][IDEA]]).
- Do not expected too much, and you'll be happy.

So this is the ultimate Text Editor for lifetime, if it looks good to you, welcome aboard.

* Checklist
- Emacs 26.3
- You'd better learn Vim before trying this.

* Installation
#+BEGIN_SRC bash
cd ~; git clone https://github.com/willbchang/emacs.d.git .emacs.
#+END_SRC
* Configuration
;; ------------------- Font -------------------------------------------
;; Set Font Family and Font Size
#+begin_src emacs-lisp
(set-face-attribute 'default nil
                    :font "Inconsolata-18")
#+end_src

;; ------------------- Color Theme --------------------------------------
;; Set Color Theme
#+begin_src emacs-lisp
(load-theme 'idea-darkula t)
#+end_src

;; Set Cursor Color
#+begin_src emacs-lisp
(set-cursor-color "#e2416c")
#+end_src

;; Set Titlebar Appearance
#+begin_src emacs-lisp
(add-to-list 'default-frame-alist '(ns-transparent-titlebar . t))
(add-to-list 'default-frame-alist '(ns-appearance . dark))
#+end_src


;; ------------------- Text Editing --------------------------------------
;; Set Command + ArrowKey to behave like MacOS
#+begin_src emacs-lisp
(global-set-key (kbd "s-<up>") 'beginning-of-buffer)
(global-set-key (kbd "s-<down>") 'end-of-buffer)
(global-set-key (kbd "s-<right>") 'move-end-of-line)
(global-set-key (kbd "s-<left>") 'move-beginning-of-line)
#+end_src


;; Delete current line and put cursor in the beginning
#+begin_src emacs-lisp
(global-set-key (kbd "s-<backspace>") 'backward-kill-line)
#+end_src

;; Kill whole line entirely
#+begin_src emacs-lisp
(global-set-key (kbd "s-S-<ackspace>") 'kill-whole-line)
#+end_src


;; Set shortcut to comment/uncomment a region/line
#+begin_src emacs-lisp
(global-set-key (kbd "s-/") 'comment-or-uncomment-region-or-line)
#+end_src

#+begin_src emacs-lisp
(defun backward-kill-line (arg)
  "Kill ARG lines backward."
  (interactive "p")
 (kill-line (- 1 arg)))
#+end_src

;; TODO:
;; 1. Comment on empty line, it adds ;; (e.g.) and put the cursor behind
;; 2. Comment one line, it adds ;; before and forward one line
;; 3. Comment on region, it add ;; and move to the next line of the region
#+begin_src emacs-lisp
(defun comment-or-uncomment-region-or-line ()
  "Comments or uncomments the region or the current line if
there's no active region."
  (interactive)
  (let (beg end)
    (if (region-active-p)
        (setq beg (region-beginning) end (region-end))
      (setq beg (line-beginning-position) end (line-end-position)))
    (comment-or-uncomment-region beg end)))
#+end_src

#+begin_src emacs-lisp

;; ------------------- Window Management ---------------------------------
;; Set frame full screen with Ctrl + Command + F
(global-set-key (kbd "<C-s-268632070>") 'toggle-frame-fullscreen)
;; Create new frame with Command + N, default with org-mode and evil-mode
(global-set-key (kbd "s-n") 'new-empty-frame)

;; Close current buffer
(global-set-key (kbd "s-w") 'kill-this-buffer)
;; Close current frame with Shift + Command + W
(global-set-key (kbd "s-W") 'delete-frame)

;; TODO: Make the buffers independent in each frame.
(defun new-empty-frame ()
  "Create a new frame with a new empty buffer. With org-mode and evil-mode enabled."
  (interactive)
  (let ((buffer (generate-new-buffer "untitled")))
    (set-buffer buffer)
    (org-mode)
    (evil-mode 1)
    (display-buffer buffer '(display-buffer-pop-up-frame . nil))))


;; ------------------- Behaviors ------------------------------------
;; Save cursor position for each file
(save-place-mode t)

;; Overwrite selection on pasting
(delete-selection-mode)

;; Highlight urls and make them clickable
(goto-address-mode)

;; Highlight paired brackets
(show-paren-mode 1)
(require 'paren)
(set-face-background 'show-paren-match (face-background 'default))
(set-face-foreground 'show-paren-match "#fad56e")
(set-face-attribute 'show-paren-match nil :weight 'extra-bold)

;; Delete trailing whitespace on saving a buffer
(add-hook 'before-save-hook 'delete-trailing-whitespace)


;; Disable the ring bell when scroll beyond the document
(setq ring-bell-function 'ignore)

;; ------------------- Proxy ----------------------------------------
;; Start server for opening file/folder from emacsclient
(server-start)
#+end_src
* Credit
It started with [[https://github.com/redguardtoo/emacs.d][redguardtoo/emacs.d]] and learned from [[https://github.com/hrs/dotfiles][hrs/dotfiles]] and [[https://github.com/hrs/sensible-defaults.el][hrs/sensible-defaults.el]].

* LICENSE
GPL-3.0 License
